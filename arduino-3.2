// Задание 2: Использование внутреннего прерывания (Таймер)
const int ledPin = 13; // Подключаем светодиод к 13 пину

void setup() {
    pinMode(ledPin, OUTPUT); // Светодиод (13 пин) как выход 

    // 1. Сбрасываем настройки таймера перед конфигурацией
    TCCR1A = 0;
    TCCR1B = 0;

    // 2. Включаем режим CTC (Clear Timer on Compare Match)
    // Таймер будет считать до OCR1A, затем сбрасываться
    TCCR1B |= (1 << WGM12);

    // 3. Задаём значение, до которого считает таймер (TOP)
    // OCR1A = 2499 -> прерывание каждые 10 мс (100 Гц)
    OCR1A = 2499;

    // 4. Разрешаем прерывание по совпадению с OCR1A
    TIMSK1 |= (1 << OCIE1A);

    // 5. Запускаем таймер с предделителем 64 (делим частоту процессора)
    TCCR1B |= (1 << CS11) | (1 << CS10);

    // Включаем глобальные прерывания (разрешаем работу ISR)
    sei();
}

// Обработчик прерывания таймера Timer1 по совпадению (CTC режим)
// Срабатывает каждые 10 мс и инвертирует состояние светодиода
ISR(TIMER1_COMPA_vect) {
    static bool ledState = false; // Храним текущее состояние светодиода
    ledState = !ledState;         // Меняем состояние на противоположное
    digitalWrite(ledPin, ledState); // Включаем/выключаем светодиод
}

void loop() {
    // Основная программа может выполнять любые задачи —
    // мигание светодиода происходит в обработчике прерывания (ISR)
}
